#include <stdio.h>

// Function to find the majority element using Boyer-Moore Majority Vote algorithm
int findMajorityElement(int arr[], int n) {
    int candidate = arr[0];
    int count = 1;

    // Phase 1: Find a candidate for the majority element
    for (int i = 1; i < n; i++) {
        if (arr[i] == candidate) {
            count++;
        } else {
            count--;
        }

        if (count == 0) {
            candidate = arr[i];
            count = 1;
        }
    }

    // Phase 2: Verify if the candidate is the majority element
    count = 0;
    for (int i = 0; i < n; i++) {
        if (arr[i] == candidate) {
            count++;
        }
    }

    if (count > n / 2) {
        return candidate; // The candidate is the majority element
    }

    return -1; // No majority element found
}

int main() {
    int n;

    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);

    if (n <= 0) {
        printf("Please enter a positive integer for the number of elements.\n");
        return 1; // Return a non-zero value to indicate an error
    }

    int arr[n];

    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    int majorityElement = findMajorityElement(arr, n);

    if (majorityElement != -1) {
        printf("Majority element in the array: %d\n", majorityElement);
    } else {
        printf("No majority element found in the array.\n");
    }

    return 0;
}
